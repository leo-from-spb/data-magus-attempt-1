package javafx

import javafx.collections.ObservableList               


public val javafx.animation.ParallelTransition.children: ObservableList<javafx.animation.Animation>  get() = this.getChildren()!!;
public val javafx.animation.SequentialTransition.children: ObservableList<javafx.animation.Animation>  get() = this.getChildren()!!;
public val javafx.animation.Timeline.keyFrames: ObservableList<javafx.animation.KeyFrame>  get() = this.getKeyFrames()!!;
public val <T> javafx.beans.binding.Binding<T>.dependencies: ObservableList<*>  get() = this.getDependencies()!!;
public val javafx.beans.binding.BooleanBinding.dependencies: ObservableList<*>  get() = this.getDependencies()!!;
public val javafx.beans.binding.DoubleBinding.dependencies: ObservableList<*>  get() = this.getDependencies()!!;
public val javafx.beans.binding.FloatBinding.dependencies: ObservableList<*>  get() = this.getDependencies()!!;
public val javafx.beans.binding.IntegerBinding.dependencies: ObservableList<*>  get() = this.getDependencies()!!;
public val <E> javafx.beans.binding.ListBinding<E>.dependencies: ObservableList<*>  get() = this.getDependencies()!!;
public val <E> javafx.beans.binding.ListExpression<E>.value: ObservableList<E>  get() = this.getValue()!!;
public val javafx.beans.binding.LongBinding.dependencies: ObservableList<*>  get() = this.getDependencies()!!;
public val <K,V> javafx.beans.binding.MapBinding<K,V>.dependencies: ObservableList<*>  get() = this.getDependencies()!!;
public val <T> javafx.beans.binding.ObjectBinding<T>.dependencies: ObservableList<*>  get() = this.getDependencies()!!;
public val <E> javafx.beans.binding.SetBinding<E>.dependencies: ObservableList<*>  get() = this.getDependencies()!!;
public val javafx.beans.binding.StringBinding.dependencies: ObservableList<*>  get() = this.getDependencies()!!;
public val javafx.scene.Group.children: ObservableList<javafx.scene.Node>  get() = this.getChildren()!!;
public val javafx.scene.Node.styleClass: ObservableList<String>  get() = this.getStyleClass()!!;
public val javafx.scene.Node.transforms: ObservableList<javafx.scene.transform.Transform>  get() = this.getTransforms()!!;
public val javafx.scene.Parent.childrenUnmodifiable: ObservableList<javafx.scene.Node>  get() = this.getChildrenUnmodifiable()!!;
public val javafx.scene.Parent.stylesheets: ObservableList<String>  get() = this.getStylesheets()!!;
public val javafx.scene.Scene.stylesheets: ObservableList<String>  get() = this.getStylesheets()!!;
public val <T> javafx.scene.chart.Axis<T>.tickMarks: ObservableList<*>  get() = this.getTickMarks()!!;
public val javafx.scene.chart.CategoryAxis.categories: ObservableList<String>  get() = this.getCategories()!!;
public val javafx.scene.chart.PieChart.data: ObservableList<javafx.scene.chart.PieChart.Data>  get() = this.getData()!!;
public val <X,Y> javafx.scene.chart.XYChart<X,Y>.data: ObservableList<*>  get() = this.getData()!!;
public val javafx.scene.control.Accordion.panes: ObservableList<javafx.scene.control.TitledPane>  get() = this.getPanes()!!;
public val <T> javafx.scene.control.ChoiceBox<T>.items: ObservableList<T>  get() = this.getItems()!!;
public val javafx.scene.control.ColorPicker.customColors: ObservableList<javafx.scene.paint.Color>  get() = this.getCustomColors()!!;
public val <T> javafx.scene.control.ComboBox<T>.items: ObservableList<T>  get() = this.getItems()!!;
public val javafx.scene.control.ContextMenu.items: ObservableList<javafx.scene.control.MenuItem>  get() = this.getItems()!!;
public val <T> javafx.scene.control.ListView<T>.items: ObservableList<T>  get() = this.getItems()!!;
public val javafx.scene.control.Menu.items: ObservableList<javafx.scene.control.MenuItem>  get() = this.getItems()!!;
public val javafx.scene.control.MenuBar.menus: ObservableList<javafx.scene.control.Menu>  get() = this.getMenus()!!;
public val javafx.scene.control.MenuButton.items: ObservableList<javafx.scene.control.MenuItem>  get() = this.getItems()!!;
public val javafx.scene.control.MenuItem.styleClass: ObservableList<String>  get() = this.getStyleClass()!!;
public val <T> javafx.scene.control.MultipleSelectionModel<T>.selectedIndices: ObservableList<Int>  get() = this.getSelectedIndices()!!;
public val <T> javafx.scene.control.MultipleSelectionModel<T>.selectedItems: ObservableList<T>  get() = this.getSelectedItems()!!;
public val javafx.scene.control.PopupControl.styleClass: ObservableList<String>  get() = this.getStyleClass()!!;
public val javafx.scene.control.SplitPane.dividers: ObservableList<javafx.scene.control.SplitPane.Divider>  get() = this.getDividers()!!;
public val javafx.scene.control.SplitPane.items: ObservableList<javafx.scene.Node>  get() = this.getItems()!!;
public val javafx.scene.control.Tab.styleClass: ObservableList<String>  get() = this.getStyleClass()!!;
public val javafx.scene.control.TabPane.tabs: ObservableList<javafx.scene.control.Tab>  get() = this.getTabs()!!;
public val <S,T> javafx.scene.control.TableColumn<S,T>.columns: ObservableList<javafx.scene.control.TableColumn<S,*>>  get() = this.getColumns()!!;
public val <S,T> javafx.scene.control.TableColumn<S,T>.styleClass: ObservableList<String>  get() = this.getStyleClass()!!;
public val <S> javafx.scene.control.TableView<S>.items: ObservableList<S>  get() = this.getItems()!!;
public val <S> javafx.scene.control.TableView<S>.visibleLeafColumns: ObservableList<javafx.scene.control.TableColumn<S,*>>  get() = this.getVisibleLeafColumns()!!;
public val <S> javafx.scene.control.TableView<S>.columns: ObservableList<javafx.scene.control.TableColumn<S,*>>  get() = this.getColumns()!!;
public val <S> javafx.scene.control.TableView<S>.sortOrder: ObservableList<javafx.scene.control.TableColumn<S,*>>  get() = this.getSortOrder()!!;
public val javafx.scene.control.TextArea.paragraphs: ObservableList<CharSequence>  get() = this.getParagraphs()!!;
public val javafx.scene.control.ToggleGroup.toggles: ObservableList<javafx.scene.control.Toggle>  get() = this.getToggles()!!;
public val javafx.scene.control.ToolBar.items: ObservableList<javafx.scene.Node>  get() = this.getItems()!!;
public val <T> javafx.scene.control.TreeItem<T>.children: ObservableList<*>  get() = this.getChildren()!!;
public val <T> javafx.scene.control.cell.ChoiceBoxListCell<T>.items: ObservableList<T>  get() = this.getItems()!!;
public val <S,T> javafx.scene.control.cell.ChoiceBoxTableCell<S,T>.items: ObservableList<T>  get() = this.getItems()!!;
public val <T> javafx.scene.control.cell.ChoiceBoxTreeCell<T>.items: ObservableList<T>  get() = this.getItems()!!;
public val <T> javafx.scene.control.cell.ComboBoxListCell<T>.items: ObservableList<T>  get() = this.getItems()!!;
public val <S,T> javafx.scene.control.cell.ComboBoxTableCell<S,T>.items: ObservableList<T>  get() = this.getItems()!!;
public val <T> javafx.scene.control.cell.ComboBoxTreeCell<T>.items: ObservableList<T>  get() = this.getItems()!!;
public val javafx.scene.input.InputMethodEvent.composed: ObservableList<javafx.scene.input.InputMethodTextRun>  get() = this.getComposed()!!;
public val javafx.scene.layout.GridPane.rowConstraints: ObservableList<javafx.scene.layout.RowConstraints>  get() = this.getRowConstraints()!!;
public val javafx.scene.layout.GridPane.columnConstraints: ObservableList<javafx.scene.layout.ColumnConstraints>  get() = this.getColumnConstraints()!!;
public val javafx.scene.layout.Pane.children: ObservableList<javafx.scene.Node>  get() = this.getChildren()!!;
public val javafx.scene.media.AudioEqualizer.bands: ObservableList<javafx.scene.media.EqualizerBand>  get() = this.getBands()!!;
public val javafx.scene.media.Media.tracks: ObservableList<javafx.scene.media.Track>  get() = this.getTracks()!!;
public val javafx.scene.shape.Path.elements: ObservableList<javafx.scene.shape.PathElement>  get() = this.getElements()!!;
public val javafx.scene.shape.Polygon.points: ObservableList<Double>  get() = this.getPoints()!!;
public val javafx.scene.shape.Polyline.points: ObservableList<Double>  get() = this.getPoints()!!;
public val javafx.scene.shape.Shape.strokeDashArray: ObservableList<Double>  get() = this.getStrokeDashArray()!!;
public val javafx.scene.web.WebHistory.entries: ObservableList<javafx.scene.web.WebHistory.Entry>  get() = this.getEntries()!!;
public val javafx.stage.FileChooser.extensionFilters: ObservableList<javafx.stage.FileChooser.ExtensionFilter>  get() = this.getExtensionFilters()!!;
public val javafx.stage.Popup.content: ObservableList<javafx.scene.Node>  get() = this.getContent()!!;
public val javafx.stage.Stage.icons: ObservableList<javafx.scene.image.Image>  get() = this.getIcons()!!;